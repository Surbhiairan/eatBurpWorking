Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AnimatedModalContainer = undefined;

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/home/anjali/growler-prowler-master/node_modules/react-native-root-modal/lib/ModalContainer.js';

var _reactNative = require('react-native');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    ModalContainer: {
        displayName: 'ModalContainer'
    }
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/home/anjali/growler-prowler-master/node_modules/react-native-root-modal/lib/ModalContainer.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _reactTransformHmrLibIndexJs2(Component, id);
    };
}

var styles = _reactNative.StyleSheet.create({
    defaultModalStyle: {
        top: 0,
        right: 0,
        bottom: 0,
        left: 0,
        justifyContent: 'center',
        alignItems: 'center',
        backgroundColor: 'rgba(0, 0, 0, 0.2)'
    }
});

var ModalContainer = _wrapComponent('ModalContainer')((_temp = _class = function (_Component) {
    _inherits(ModalContainer, _Component);

    function ModalContainer(props) {
        _classCallCheck(this, ModalContainer);

        var _this = _possibleConstructorReturn(this, (ModalContainer.__proto__ || Object.getPrototypeOf(ModalContainer)).call(this, props));

        _this.state = {
            visible: _this.props.visible
        };
        return _this;
    }

    _createClass(ModalContainer, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            if (nextProps.visible !== this.props.visible) {
                this.setState({
                    visible: nextProps.visible
                });
            }
        }
    }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
            return nextProps.visible || nextProps.visible !== this.props.visible;
        }
    }, {
        key: 'render',
        value: function render() {
            var props = this.props;

            return this.state.visible ? _react3.default.createElement(_reactNative.View, _extends({}, props, {
                style: [props.style[0] || styles.defaultModalStyle, props.style[1]],
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 50
                }
            })) : null;
        }
    }]);

    return ModalContainer;
}(_react2.Component), _class.displayName = 'ModalContainer', _class.propTypes = _extends({}, _reactNative.Animated.View.propTypes, {
    visible: _propTypes2.default.bool
}), _class.defaultProps = {
    visible: false
}, _temp));

exports.default = ModalContainer;

var AnimatedModalContainer = exports.AnimatedModalContainer = function (_ModalContainer) {
    _inherits(AnimatedModalContainer, _ModalContainer);

    function AnimatedModalContainer() {
        _classCallCheck(this, AnimatedModalContainer);

        return _possibleConstructorReturn(this, (AnimatedModalContainer.__proto__ || Object.getPrototypeOf(AnimatedModalContainer)).apply(this, arguments));
    }

    _createClass(AnimatedModalContainer, [{
        key: 'render',
        value: function render() {
            var props = this.props;

            return this.state.visible ? _react3.default.createElement(_reactNative.Animated.View, _extends({}, props, {
                style: [props.style[0] || styles.defaultModalStyle, props.style[1]],
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 64
                }
            })) : null;
        }
    }]);

    return AnimatedModalContainer;
}(ModalContainer);