Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec,
    _class,
    _jsxFileName = '/home/anjali/growler-prowler-master/screens/AuthenticationScreen.js';

var _reactNative = require('react-native');

var _reactRedux = require('react-redux');

var _expo = require('expo');

var _reactNativeTouchableNativeFeedbackSafe = require('@expo/react-native-touchable-native-feedback-safe');

var _reactNativeTouchableNativeFeedbackSafe2 = _interopRequireDefault(_reactNativeTouchableNativeFeedbackSafe);

var _reactNativeFadeInImage = require('react-native-fade-in-image');

var _reactNativeFadeInImage2 = _interopRequireDefault(_reactNativeFadeInImage);

var _Actions = require('../state/Actions');

var _Actions2 = _interopRequireDefault(_Actions);

var _Layout = require('../constants/Layout');

var _Layout2 = _interopRequireDefault(_Layout);

var _StyledText = require('../components/StyledText');

var _Records = require('../state/Records');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var regeneratorRuntime = require('regenerator-runtime');

var _components = {
  AuthenticationScreen: {
    displayName: 'AuthenticationScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/anjali/growler-prowler-master/screens/AuthenticationScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var AuthenticationScreen = _wrapComponent('AuthenticationScreen')((_dec = (0, _reactRedux.connect)(), _dec(_class = function (_React$Component) {
  _inherits(AuthenticationScreen, _React$Component);

  function AuthenticationScreen() {
    var _ref,
        _this2 = this;

    var _temp, _this, _ret;

    _classCallCheck(this, AuthenticationScreen);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AuthenticationScreen.__proto__ || Object.getPrototypeOf(AuthenticationScreen)).call.apply(_ref, [this].concat(args))), _this), _this._signInWithFacebook = function _callee() {
      var result, response, info;
      return regeneratorRuntime.async(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(_expo.Facebook.logInWithReadPermissionsAsync('1615553262072011', {
                permissions: ['public_profile'],
                behavior: _reactNative.Platform.OS === 'ios' ? 'web' : 'system'
              }));

            case 2:
              result = _context.sent;

              if (!(result.type === 'success')) {
                _context.next = 11;
                break;
              }

              _context.next = 6;
              return regeneratorRuntime.awrap(fetch('https://graph.facebook.com/me?access_token=' + result.token));

            case 6:
              response = _context.sent;
              _context.next = 9;
              return regeneratorRuntime.awrap(response.json());

            case 9:
              info = _context.sent;


              _this.props.dispatch(_Actions2.default.signIn(new _Records.User({
                id: info.id,
                authToken: result.token,
                name: info.name,
                isGuest: false
              })));

            case 11:
            case 'end':
              return _context.stop();
          }
        }
      }, null, _this2);
    }, _this._continueAsGuest = function () {
      _this.props.dispatch(_Actions2.default.signIn(new _Records.User({ isGuest: true })));
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(AuthenticationScreen, [{
    key: 'render',
    value: function render() {
      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 17
          }
        },
        _react3.default.createElement(_reactNative.Image, {
          style: {
            width: 100,
            height: 200,
            marginBottom: 30
          },
          resizeMode: 'contain',
          source: require('../assets/images/logo.png'),
          __source: {
            fileName: _jsxFileName,
            lineNumber: 18
          }
        }),
        _react3.default.createElement(
          _reactNativeTouchableNativeFeedbackSafe2.default,
          {
            onPress: this._signInWithFacebook,
            style: styles.facebookButton, __source: {
              fileName: _jsxFileName,
              lineNumber: 27
            }
          },
          _react3.default.createElement(
            _StyledText.RegularText,
            { style: styles.facebookButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 30
              }
            },
            'Sign in with Facebook'
          )
        ),
        _react3.default.createElement(
          _reactNativeTouchableNativeFeedbackSafe2.default,
          {
            onPress: this._continueAsGuest,
            style: styles.guestButton, __source: {
              fileName: _jsxFileName,
              lineNumber: 35
            }
          },
          _react3.default.createElement(
            _StyledText.RegularText,
            { style: styles.guestButtonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 38
              }
            },
            'Continue as a guest'
          )
        )
      );
    }
  }]);

  return AuthenticationScreen;
}(_react3.default.Component)) || _class));

exports.default = AuthenticationScreen;


var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center'
  },
  facebookButton: {
    backgroundColor: '#3b5998',
    paddingVertical: 15,
    paddingHorizontal: 30,
    alignItems: 'center',
    borderRadius: 5,
    width: 250
  },
  guestButton: {
    marginTop: 15,
    backgroundColor: '#eee',
    paddingVertical: 15,
    paddingHorizontal: 30,
    borderRadius: 5,
    alignItems: 'center',
    width: 250
  },
  facebookButtonText: {
    fontSize: 15,
    color: '#fff'
  },
  guestButtonText: {
    fontSize: 15,
    color: 'rgba(0,0,0,0.9)'
  }
});